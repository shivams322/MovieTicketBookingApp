/*
Deployment script for BookMyShowDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BookMyShowDb"
:setvar DefaultFilePrefix "BookMyShowDb"
:setvar DefaultDataPath "C:\Users\ASUS\AppData\Local\Microsoft\VisualStudio\SSDT\BookMyShow"
:setvar DefaultLogPath "C:\Users\ASUS\AppData\Local\Microsoft\VisualStudio\SSDT\BookMyShow"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key ba72637b-1461-4128-ab9c-2f827f9f0f47 is skipped, element [dbo].[Movie].[MovieId] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key a909643e-37c9-4428-b962-069d3e8524f2 is skipped, element [dbo].[User].[UserId] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'Rename refactoring operation with key bae90c4c-38a7-4838-bd48-5bca58012f5b is skipped, element [dbo].[Booking].[No] (SqlSimpleColumn) will not be renamed to NoOfSeats';


GO
PRINT N'Rename refactoring operation with key 75410d55-638b-4633-b3fd-b1e4722b8d05, 64c9669a-e2ec-4146-b3d5-8a694de4679e is skipped, element [dbo].[Booking].[Timings] (SqlSimpleColumn) will not be renamed to BookTime';


GO
PRINT N'Rename refactoring operation with key f22b37f7-30d9-4070-ae66-25d6997df867 is skipped, element [dbo].[UserSeat].[CinemaSeatId] (SqlSimpleColumn) will not be renamed to SeatNumber';


GO
PRINT N'Creating Table [dbo].[Booking]...';


GO
CREATE TABLE [dbo].[Booking] (
    [Id]        INT      IDENTITY (1, 1) NOT NULL,
    [NoOfSeats] INT      NOT NULL,
    [BookTime]  DATETIME NOT NULL,
    [UserId]    INT      NOT NULL,
    [ShowId]    INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Cinema]...';


GO
CREATE TABLE [dbo].[Cinema] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [CinemaName] NVARCHAR (MAX) NOT NULL,
    [TotalSeats] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Movie]...';


GO
CREATE TABLE [dbo].[Movie] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Title]       NVARCHAR (MAX) NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [Language]    NVARCHAR (50)  NOT NULL,
    [ReleaseDate] DATETIME       NOT NULL,
    [Genre]       NVARCHAR (50)  NOT NULL,
    [Duration]    NVARCHAR (50)  NOT NULL,
    [MoviePoster] IMAGE          NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Show]...';


GO
CREATE TABLE [dbo].[Show] (
    [Id]        INT      IDENTITY (1, 1) NOT NULL,
    [Date]      DATETIME NOT NULL,
    [StartTime] DATETIME NOT NULL,
    [EndTime]   DATETIME NOT NULL,
    [CinemaId]  INT      NOT NULL,
    [MovieId]   INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[ShowSeat]...';


GO
CREATE TABLE [dbo].[ShowSeat] (
    [Id]         INT          IDENTITY (1, 1) NOT NULL,
    [price]      INT          NOT NULL,
    [Status]     VARCHAR (50) NOT NULL,
    [SeatNumber] INT          NOT NULL,
    [ShowId]     INT          NOT NULL,
    [BookingId]  INT          NOT NULL,
    [CinemaId]   INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (255) NOT NULL,
    [Email]    NVARCHAR (255) NOT NULL,
    [Phone]    NVARCHAR (255) NOT NULL,
    [Password] NVARCHAR (255) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Booking]...';


GO
ALTER TABLE [dbo].[Booking]
    ADD DEFAULT GETDATE() FOR [BookTime];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Movie]...';


GO
ALTER TABLE [dbo].[Movie]
    ADD DEFAULT NULL FOR [MoviePoster];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ShowSeat]...';


GO
ALTER TABLE [dbo].[ShowSeat]
    ADD DEFAULT 200 FOR [price];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ShowSeat]...';


GO
ALTER TABLE [dbo].[ShowSeat]
    ADD DEFAULT 0 FOR [Status];


GO
PRINT N'Creating View [dbo].[ShowList]...';


GO
CREATE VIEW [dbo].[ShowList]
	AS 
Select [Show].[Id],[Show].[Date],[Show].[StartTime],[Show].[EndTime],[Show].[CinemaId] ,[Show].[MovieId] ,[Movie].[Title],[Cinema].[CinemaName]
FROM [dbo].[Show]
INNER JOIN [dbo].[Movie] ON [Movie].[Id]=[Show].[MovieId]
INNER JOIN [dbo].[Cinema] ON [Show].[CinemaId]=[Cinema].[Id]
GO
PRINT N'Creating View [dbo].[Ticket]...';


GO
CREATE VIEW [dbo].[Ticket]
	AS 
Select [User].[Id],[Booking].[Id]AS [BookingId],[User].[Name],[Movie].[Title] AS [MovieName],[Cinema].[CinemaName] AS [Cinema],[Show].[StartTime] AS [MovieTimings] ,[Booking].[NoOfSeats] ,[ShowSeat].[SeatNumber]
FROM [dbo].[Movie]
INNER JOIN [dbo].[Show] ON [Movie].[Id]=[Show].[MovieId]
INNER JOIN [dbo].[Cinema] ON [Show].[CinemaId]=[Cinema].[Id]
INNER JOIN [dbo].[Booking] ON [Show].[Id]=[Booking].[ShowId]
INNER JOIN [dbo].[ShowSeat] ON [Booking].[Id]=[ShowSeat].[BookingId]
INNER JOIN [dbo].[User] ON [Booking].[UserId]=[User].[Id];
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ae957421-c259-4155-8010-8fa3dbdaf667')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ae957421-c259-4155-8010-8fa3dbdaf667')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '58af76af-97ee-4d75-9004-9b209e7f3511')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('58af76af-97ee-4d75-9004-9b209e7f3511')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ba72637b-1461-4128-ab9c-2f827f9f0f47')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ba72637b-1461-4128-ab9c-2f827f9f0f47')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a909643e-37c9-4428-b962-069d3e8524f2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a909643e-37c9-4428-b962-069d3e8524f2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bae90c4c-38a7-4838-bd48-5bca58012f5b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bae90c4c-38a7-4838-bd48-5bca58012f5b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '453d1e8b-c9eb-4042-a2ec-dcfe226fe075')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('453d1e8b-c9eb-4042-a2ec-dcfe226fe075')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '17ecfab0-1e79-4d4f-8aa9-9e5e5ac2d201')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('17ecfab0-1e79-4d4f-8aa9-9e5e5ac2d201')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '75410d55-638b-4633-b3fd-b1e4722b8d05')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('75410d55-638b-4633-b3fd-b1e4722b8d05')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '64c9669a-e2ec-4146-b3d5-8a694de4679e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('64c9669a-e2ec-4146-b3d5-8a694de4679e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f22b37f7-30d9-4070-ae66-25d6997df867')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f22b37f7-30d9-4070-ae66-25d6997df867')

GO

GO
PRINT N'Update complete.';


GO
