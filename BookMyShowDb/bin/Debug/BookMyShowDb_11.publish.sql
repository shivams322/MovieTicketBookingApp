/*
Deployment script for BookMyShowDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BookMyShowDB"
:setvar DefaultFilePrefix "BookMyShowDB"
:setvar DefaultDataPath "C:\Users\ASUS\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\mssqllocaldb\"
:setvar DefaultLogPath "C:\Users\ASUS\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\mssqllocaldb\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[Movie]...';


GO
ALTER TABLE [dbo].[Movie] DROP CONSTRAINT [DF__Movie__MoviePost__58D1301D];


GO
PRINT N'Starting rebuilding table [dbo].[Image]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Image] (
    [Id]         INT             NOT NULL,
    [MovieId]    INT             NOT NULL,
    [MovieImage] VARBINARY (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Image])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Image] ([Id], [MovieId], [MovieImage])
        SELECT   [Id],
                 [MovieId],
                 [MovieImage]
        FROM     [dbo].[Image]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Image];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Image]', N'Image';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Movie]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Movie] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Title]       NVARCHAR (MAX) NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [Language]    NVARCHAR (50)  NOT NULL,
    [ReleaseDate] DATETIME       NOT NULL,
    [Genre]       NVARCHAR (50)  NOT NULL,
    [Duration]    NVARCHAR (50)  NOT NULL,
    [MoviePoster] IMAGE          DEFAULT NULL NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Movie])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Movie] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Movie] ([Id], [Title], [Description], [Language], [ReleaseDate], [Genre], [Duration], [MoviePoster])
        SELECT   [Id],
                 [Title],
                 [Description],
                 [Language],
                 [ReleaseDate],
                 [Genre],
                 [Duration],
                 [MoviePoster]
        FROM     [dbo].[Movie]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Movie] OFF;
    END

DROP TABLE [dbo].[Movie];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Movie]', N'Movie';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Refreshing View [dbo].[ShowList]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ShowList]';


GO
PRINT N'Altering View [dbo].[Ticket]...';


GO
ALTER VIEW [dbo].[Ticket]
	AS 
Select [User].[Id],[Booking].[Id]AS [BookingId],[User].[Name],[Movie].[Title] AS [MovieName],[Cinema].[CinemaName] AS [Cinema],[Show].[StartTime] AS [MovieTimings] ,[Booking].[NoOfSeats] ,[ShowSeat].[SeatNumber]
FROM [dbo].[Movie]
INNER JOIN [dbo].[Show] ON [Movie].[Id]=[Show].[MovieId]
INNER JOIN [dbo].[Cinema] ON [Show].[CinemaId]=[Cinema].[Id]
INNER JOIN [dbo].[Booking] ON [Show].[Id]=[Booking].[ShowId]
INNER JOIN [dbo].[ShowSeat] ON [Booking].[Id]=[ShowSeat].[BookingId]
INNER JOIN [dbo].[User] ON [Booking].[UserId]=[User].[Id];
GO
PRINT N'Creating View [dbo].[MovieList]...';


GO
CREATE VIEW [dbo].[MovieList]
	AS 
SELECT [Movie].[Id],[Movie].[Title],[Movie].[Description],[Movie].[Language],[Movie].[ReleaseDate],[Movie].[Genre],[Movie].[Duration],[Image].[MovieImage]
FROM [dbo].[Movie]
INNER JOIN [dbo].[Image] 
ON [Movie].[Id]=[Image].[MovieId]
GO
PRINT N'Update complete.';


GO
